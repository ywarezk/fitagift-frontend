{"ts":1375026056450,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Generated on 2013-07-15 using generator-ember 0.3.1\n'use strict';\nvar lrSnippet = require('grunt-contrib-livereload/lib/utils').livereloadSnippet;\nvar mountFolder = function (connect, dir) {\n    return connect.static(require('path').resolve(dir));\n};\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n    // load all grunt tasks\n    require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);\n\n    // configurable paths\n    var yeomanConfig = {\n        app: 'app',\n        dist: 'dist'\n    };\n\n    grunt.initConfig({\n        yeoman: yeomanConfig,\n        watch: {\n            emberTemplates: {\n                files: '<%= yeoman.app %>/templates/**/*.hbs',\n                tasks: ['emberTemplates', 'livereload']\n            },\n            coffee: {\n                files: ['<%= yeoman.app %>/scripts/{,*/}*.coffee'],\n                tasks: ['coffee:dist']\n            },\n            coffeeTest: {\n                files: ['test/spec/{,*/}*.coffee'],\n                tasks: ['coffee:test']\n            },\n            compass: {\n                files: ['<%= yeoman.app %>/styles/{,*/}*.{scss,sass}'],\n                tasks: ['compass:server']\n            },\n            neuter: {\n                files: ['<%= yeoman.app %>/scripts/{,*/}*.js'],\n                tasks: ['neuter', 'livereload']\n            },\n            livereload: {\n                files: [\n                    '<%= yeoman.app %>/*.html',\n                    '{.tmp,<%= yeoman.app %>}/styles/{,*/}*.css',\n                    '<%= yeoman.app %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}'\n                ],\n                tasks: ['livereload']\n            }\n        },\n        connect: {\n            options: {\n                port: 9000,\n                // change this to '0.0.0.0' to access the server from outside\n                hostname: 'localhost'\n            },\n            livereload: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            lrSnippet,\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, 'app')\n                        ];\n                    }\n                }\n            },\n            test: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, 'test')\n                        ];\n                    }\n                }\n            },\n            dist: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, 'dist')\n                        ];\n                    }\n                }\n            }\n        },\n        open: {\n            server: {\n                path: 'http://localhost:<%= connect.options.port %>'\n            }\n        },\n        clean: {\n            dist: {\n                files: [{\n                    dot: true,\n                    src: [\n                        '.tmp',\n                        '<%= yeoman.dist %>/*',\n                        '!<%= yeoman.dist %>/.git*'\n                    ]\n                }]\n            },\n            server: '.tmp'\n        },\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc'\n            },\n            all: [\n                'Gruntfile.js',\n                '<%= yeoman.app %>/scripts/{,*/}*.js',\n                '!<%= yeoman.app %>/scripts/vendor/*',\n                'test/spec/{,*/}*.js'\n            ]\n        },\n        mocha: {\n            all: {\n                options: {\n                    run: true,\n                    urls: ['http://localhost:<%= connect.options.port %>/index.html']\n                }\n            }\n        },\n        coffee: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/scripts',\n                    src: '{,*/}*.coffee',\n                    dest: '.tmp/scripts',\n                    ext: '.js'\n                }]\n            },\n            test: {\n                files: [{\n                    expand: true,\n                    cwd: 'test/spec',\n                    src: '{,*/}*.coffee',\n                    dest: '.tmp/spec',\n                    ext: '.js'\n                }]\n            }\n        },\n        compass: {\n            options: {\n                sassDir: '<%= yeoman.app %>/styles',\n                cssDir: '.tmp/styles',\n                generatedImagesDir: '.tmp/images/generated',\n                imagesDir: '<%= yeoman.app %>/images',\n                javascriptsDir: '<%= yeoman.app %>/scripts',\n                fontsDir: '<%= yeoman.app %>/styles/fonts',\n                importPath: 'app/bower_components',\n                httpImagesPath: '/images',\n                httpGeneratedImagesPath: '/images/generated',\n                httpFontsPath: '/styles/fonts',\n                relativeAssets: false\n            },\n            dist: {},\n            server: {\n                options: {\n                    debugInfo: true\n                }\n            }\n        },\n        // not used since Uglify task does concat,\n        // but still available if needed\n        /*concat: {\n            dist: {}\n        },*/\n        // not enabled since usemin task does concat and uglify\n        // check index.html to edit your build targets\n        // enable this task if you prefer defining your build targets here\n        /*uglify: {\n            dist: {}\n        },*/\n        rev: {\n            dist: {\n                files: {\n                    src: [\n                        '<%= yeoman.dist %>/scripts/{,*/}*.js',\n                        '<%= yeoman.dist %>/styles/{,*/}*.css',\n                        '<%= yeoman.dist %>/images/{,*/}*.{png,jpg,jpeg,gif,webp}',\n                        '<%= yeoman.dist %>/styles/fonts/*'\n                    ]\n                }\n            }\n        },\n        useminPrepare: {\n            html: '<%= yeoman.app %>/index.html',\n            options: {\n                dest: '<%= yeoman.dist %>'\n            }\n        },\n        usemin: {\n            html: ['<%= yeoman.dist %>/{,*/}*.html'],\n            css: ['<%= yeoman.dist %>/styles/{,*/}*.css'],\n            options: {\n                dirs: ['<%= yeoman.dist %>']\n            }\n        },\n        imagemin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.{png,jpg,jpeg}',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        svgmin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.svg',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        cssmin: {\n            dist: {\n                files: {\n                    '<%= yeoman.dist %>/styles/main.css': [\n                        '.tmp/styles/{,*/}*.css',\n                        '<%= yeoman.app %>/styles/{,*/}*.css'\n                    ]\n                }\n            }\n        },\n        htmlmin: {\n            dist: {\n                options: {\n                    /*removeCommentsFromCDATA: true,\n                    // https://github.com/yeoman/grunt-usemin/issues/44\n                    //collapseWhitespace: true,\n                    collapseBooleanAttributes: true,\n                    removeAttributeQuotes: true,\n                    removeRedundantAttributes: true,\n                    useShortDoctype: true,\n                    removeEmptyAttributes: true,\n                    removeOptionalTags: true*/\n                },\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>',\n                    src: '*.html',\n                    dest: '<%= yeoman.dist %>'\n                }]\n            }\n        },\n        // Put files not handled in other tasks here\n        copy: {\n            dist: {\n                files: [{\n                    expand: true,\n                    dot: true,\n                    cwd: '<%= yeoman.app %>',\n                    dest: '<%= yeoman.dist %>',\n                    src: [\n                        '*.{ico,txt}',\n                        '.htaccess',\n                        'images/{,*/}*.{webp,gif}',\n                        'styles/fonts/*'\n                    ]\n                }]\n            }\n        },\n        concurrent: {\n            server: [\n                'emberTemplates',\n                'coffee:dist',\n                'compass:server'\n            ],\n            test: [\n                'coffee',\n                'compass'\n            ],\n            dist: [\n                'emberTemplates',\n                'coffee',\n                'compass:dist',\n                'imagemin',\n                'svgmin',\n                'htmlmin'\n            ]\n        },\n        emberTemplates: {\n            options: {\n                templateName: function (sourceFile) {\n                    var templatePath = yeomanConfig.app + '/templates/';\n                    return sourceFile.replace(templatePath, '');\n                }\n            },\n            dist: {\n                files: {\n                    '.tmp/scripts/compiled-templates.js': '<%= yeoman.app %>/templates/{,*/}*.hbs'\n                }\n            }\n        },\n        neuter: {\n            app: {\n                options: {\n                    filepathTransform: function (filepath) {\n                        return 'app/' + filepath;\n                    }\n                },\n                src: '<%= yeoman.app %>/scripts/app.js',\n                dest: '.tmp/scripts/combined-scripts.js'\n            }\n        }\n    });\n\n    grunt.renameTask('regarde', 'watch');\n\n    grunt.registerTask('server', function (target) {\n        if (target === 'dist') {\n            return grunt.task.run(['build', 'open', 'connect:dist:keepalive']);\n        }\n\n        grunt.task.run([\n            'clean:server',\n            'concurrent:server',\n            'neuter:app',\n            'livereload-start',\n            'connect:livereload',\n            'open',\n            'watch'\n        ]);\n    });\n\n    grunt.registerTask('test', [\n        'clean:server',\n        'concurrent:test',\n        'neuter:app',\n        'connect:test',\n        'mocha'\n    ]);\n\n    grunt.registerTask('build', [\n        'clean:dist',\n        'useminPrepare',\n        'concurrent:dist',\n        'neuter:app',\n        'concat',\n        'cssmin',\n        'uglify',\n        'copy',\n        'rev',\n        'usemin'\n    ]);\n\n    grunt.registerTask('default', [\n        'jshint',\n        'test',\n        'build'\n    ]);\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":11024}]],"length":11024}
{"contributors":[],"silentsave":false,"ts":1375026155149,"patch":[[{"diffs":[[0,"mplates'"],[-1,", 'livereload'"],[0,""],[1,""],[0,"]\n      "]],"start1":864,"start2":864,"length1":30,"length2":16},{"diffs":[[0,"ter'"],[-1,", 'livereload'"],[0,"]\n  "]],"start1":1431,"start2":1431,"length1":22,"length2":8},{"diffs":[[0,"  },\n           "],[1," //"],[0," livereload: {\n "]],"start1":1447,"start2":1447,"length1":32,"length2":35},{"diffs":[[0,": {\n            "],[1,"//"],[0,"    "],[1," "],[0,"files: [\n       "]],"start1":1477,"start2":1477,"length1":36,"length2":39},{"diffs":[[0,"s: [\n           "],[1," //"],[0,"         '<%= ye"]],"start1":1504,"start2":1504,"length1":32,"length2":35},{"diffs":[[0,"ml',\n           "],[1," //"],[0,"         '{.tmp,"]],"start1":1555,"start2":1555,"length1":32,"length2":35},{"diffs":[[0,"ss',\n           "],[1," //"],[0,"         '<%= ye"]],"start1":1624,"start2":1624,"length1":32,"length2":35},{"diffs":[[0,"\n           "],[1," //"],[0,"     ],\n    "]],"start1":1713,"start2":1713,"length1":24,"length2":27},{"diffs":[[0,"  ],\n           "],[1," //"],[0,"     tasks: ['li"]],"start1":1731,"start2":1731,"length1":32,"length2":35},{"diffs":[[0,"ad']\n           "],[1," //"],[0," }\n        },\n  "]],"start1":1772,"start2":1772,"length1":32,"length2":35},{"diffs":[[0,"rt: "],[-1,"9000"],[1,"process.env.PORT"],[0,",\n  "]],"start1":1865,"start2":1865,"length1":12,"length2":24},{"diffs":[[0,"me: "],[-1,"'localhost'"],[1,"process.env.IP"],[0,"\n   "]],"start1":1987,"start2":1987,"length1":19,"length2":22},{"diffs":[[0,"        "],[1," //"],[0," liverel"]],"start1":2024,"start2":2024,"length1":16,"length2":19},{"diffs":[[0,"d: {\n           "],[1," //"],[0,"     options: {\n"]],"start1":2045,"start2":2045,"length1":32,"length2":35},{"diffs":[[0,"s: {\n           "],[1," //"],[0,"         middlew"]],"start1":2075,"start2":2075,"length1":32,"length2":35},{"diffs":[[0,"t) {\n           "],[1," //"],[0,"             ret"]],"start1":2131,"start2":2131,"length1":32,"length2":35},{"diffs":[[0,"n [\n            "],[1,"//"],[0,"                "]],"start1":2168,"start2":2168,"length1":32,"length2":34},{"diffs":[[0,"        "],[1," "],[0,"lrSnippe"]],"start1":2194,"start2":2194,"length1":16,"length2":17},{"diffs":[[0,"pet,\n           "],[1," //"],[0,"                "]],"start1":2209,"start2":2209,"length1":32,"length2":35},{"diffs":[[0,"'),\n            "],[1,"//"],[0,"                "]],"start1":2271,"start2":2271,"length1":32,"length2":34},{"diffs":[[0,"                "],[1," "],[0,"mountFolder(conn"]],"start1":2289,"start2":2289,"length1":32,"length2":33},{"diffs":[[0,"pp')\n           "],[1," //"],[0,"             ];\n"]],"start1":2329,"start2":2329,"length1":32,"length2":35},{"diffs":[[0,"  ];\n           "],[1," //"],[0,"         }\n     "]],"start1":2359,"start2":2359,"length1":32,"length2":35},{"diffs":[[0,"   }\n           "],[1," //"],[0,"     }\n         "]],"start1":2384,"start2":2384,"length1":32,"length2":35},{"diffs":[[0,"   }\n           "],[1," //"],[0," },\n            "]],"start1":2405,"start2":2405,"length1":32,"length2":35},{"diffs":[[0,"        "],[1," //"],[0," 'livere"]],"start1":10451,"start2":10451,"length1":16,"length2":19},{"diffs":[[0,"\n           "],[1," //"],[0," 'connect:li"]],"start1":10482,"start2":10482,"length1":24,"length2":27}]],"length":11074,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375099719405,"patch":[[{"diffs":[[0,"            "],[1," //"],[0," '.tmp',\n   "]],"start1":3304,"start2":3304,"length1":24,"length2":27},{"diffs":[[0," // '.tmp',\n"],[1,"                        'app/bower_components/compiled_app',\n"],[0,"            "]],"start1":3316,"start2":3316,"length1":24,"length2":85},{"diffs":[[0," },\n            "],[1,"//"],[0,"server: '.tmp'\n "]],"start1":3541,"start2":3541,"length1":32,"length2":34},{"diffs":[[0," '.tmp'\n"],[1,"            server: 'app/bower_components/compiled_app'\n"],[0,"        "]],"start1":3566,"start2":3566,"length1":16,"length2":72},{"diffs":[[0,"         dest: '"],[-1,".tm"],[1,"app/bower_components/compiled_ap"],[0,"p/scripts',\n    "]],"start1":4387,"start2":4387,"length1":35,"length2":64},{"diffs":[[0," dest: '"],[-1,".tm"],[1,"app/bower_components/compiled_ap"],[0,"p/spec',"]],"start1":4691,"start2":4691,"length1":19,"length2":48},{"diffs":[[0,"ssDir: '"],[-1,".tm"],[1,"app/bower_components/compiled_ap"],[0,"p/styles"]],"start1":4927,"start2":4927,"length1":19,"length2":48}]],"length":11283,"saved":false}
{"ts":1375100742011,"patch":[[{"diffs":[[0,"esDir: '"],[-1,".tm"],[1,"app/bower_components/compiled_ap"],[0,"p/images"]],"start1":5007,"start2":5007,"length1":19,"length2":48},{"diffs":[[0,"       '"],[-1,".tm"],[1,"app/bower_components/compiled_ap"],[0,"p/styles"]],"start1":7589,"start2":7589,"length1":19,"length2":48},{"diffs":[[0,"       '"],[-1,".tm"],[1,"app/bower_components/compiled_ap"],[0,"p/script"]],"start1":9891,"start2":9891,"length1":19,"length2":48},{"diffs":[[0," dest: '"],[-1,".tm"],[1,"app/bower_components/compiled_ap"],[0,"p/script"]],"start1":10337,"start2":10337,"length1":19,"length2":48}]],"length":11399,"saved":false}
